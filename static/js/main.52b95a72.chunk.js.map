{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","trim","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","preparedTodos","userId","usersFromServer","find","findUserById","App","useState","setTodos","setTitle","setUserId","titleError","setTitleError","userIdError","setUserIdError","reset","action","method","onSubmit","event","preventDefault","isError","todoWithId","newTodo","Math","max","noValidate","htmlFor","type","value","onChange","target","placeholder","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.52b95a72.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import User from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo = ({ user }: Props) => {\n  const { email, name } = user;\n\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n    >\n      {name.trim()}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { UserInfo } from '../UserInfo';\nimport { TodoWithUser } from '../../types/Todos';\n\ntype Props = {\n  todo: TodoWithUser;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n      key={id}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoWithUser } from '../../types/Todos';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: TodoWithUser[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { TodoWithUser } from './types/Todos';\nimport User from './types/User';\n\nconst preparedTodos: TodoWithUser[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: usersFromServer.find(({ id }) => id === todo.id) || null,\n} as TodoWithUser));\n\nfunction findUserById(userId: number): User {\n  return usersFromServer.find(({ id }) => userId === id) as User;\n}\n\nexport const App = () => {\n  const [todos, setTodos] = useState<TodoWithUser[]>(preparedTodos);\n  const [title, setTitle] = useState<string>('');\n  const [userId, setUserId] = useState<number>(0);\n  const [titleError, setTitleError] = useState<boolean>(false);\n  const [userIdError, setUserIdError] = useState<boolean>(false);\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const addButton = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    let isError = false;\n\n    if (title === '') {\n      setTitleError(true);\n      isError = true;\n    }\n\n    if (userId === 0) {\n      setUserIdError(true);\n      isError = true;\n    }\n\n    if (isError) {\n      return;\n    }\n\n    reset();\n\n    const todoWithId = todos.map(({ id }) => id);\n    const maxTodoId = Math.max(...todoWithId);\n\n    const newTodo: TodoWithUser = {\n      id: maxTodoId + 1,\n      title,\n      completed: false,\n      userId,\n      user: findUserById(userId),\n    };\n\n    setTodos([...todos, newTodo]);\n\n    reset();\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const selectUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setUserIdError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={addButton}\n        noValidate\n      >\n        <div className=\"field\">\n          <label\n            htmlFor=\"title\"\n          >\n            Title:\n          </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleTitleChange}\n            placeholder=\"Enter a title\"\n          />\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userID\">\n            User:\n          </label>\n          <select\n            id=\"userID\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={selectUser}\n          >\n            <option\n              value=\"0\"\n              disabled\n            >\n              Choose a user\n            </option>\n\n            {usersFromServer.map((user: User) => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {userIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}